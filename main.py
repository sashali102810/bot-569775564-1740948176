Для создания Telegram-бота, который показывает случайные факты о животных по команде `/fact`, мы будем использовать библиотеку `python-telegram-bot` версии 20.x. Также добавим обработку ошибок и логирование.

### Шаги:
1. Установим необходимые библиотеки.
2. Создадим бота и добавим обработчик команды `/fact`.
3. Добавим обработку ошибок и логирование.

### Установка библиотек
Убедитесь, что у вас установлены необходимые библиотеки:

```bash
pip install python-telegram-bot
```

### Код бота

```python
import logging
import random
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

# Настройка логирования
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# Список случайных фактов о животных
animal_facts = [
    "Слоны - единственные животные, которые не могут прыгать.",
    "У улитки около 25 000 зубов.",
    "Сердце креветки находится в её голове.",
    "Крокодилы не могут высовывать язык.",
    "Кошки могут издавать более 100 различных звуков.",
    "Собаки имеют около 1700 вкусовых рецепторов.",
    "Пингвины могут прыгать в высоту до 2 метров.",
    "У жирафа такое же количество шейных позвонков, как и у человека - 7.",
    "Змеи могут спать до 3 лет подряд.",
    "Бабочки пробуют пищу ногами."
]

# Обработчик команды /fact
async def fact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        # Выбираем случайный факт
        random_fact = random.choice(animal_facts)
        # Отправляем факт пользователю
        await update.message.reply_text(random_fact)
    except Exception as e:
        logger.error(f"Ошибка при обработке команды /fact: {e}")
        await update.message.reply_text("Произошла ошибка при получении факта. Попробуйте снова.")

# Основная функция для запуска бота
def main():
    # Создаем приложение с токеном вашего бота
    application = ApplicationBuilder().token("YOUR_TELEGRAM_BOT_TOKEN").build()

    # Регистрируем обработчик команды /fact
    application.add_handler(CommandHandler("fact", fact))

    # Запускаем бота
    application.run_polling()

if __name__ == '__main__':
    main()
```

### Объяснение кода:

1. **Логирование**: Мы используем модуль `logging` для логирования ошибок и другой информации. Логи будут выводиться в консоль.

2. **Список фактов**: Мы создали список `animal_facts`, который содержит несколько случайных фактов о животных.

3. **Обработчик команды `/fact`**: Когда пользователь отправляет команду `/fact`, бот выбирает случайный факт из списка и отправляет его пользователю. Если происходит ошибка, она логируется, и пользователь получает сообщение об ошибке.

4. **Запуск бота**: В функции `main()` мы создаем приложение с токеном вашего бота и регистрируем обработчик команды `/fact`. Затем бот запускается с помощью метода `run_polling()`.

### Как запустить бота:

1. Замените `"YOUR_TELEGRAM_BOT_TOKEN"` на токен вашего бота, который вы получили от BotFather.
2. Запустите скрипт.

Теперь ваш бот будет отвечать на команду `/fact` случайным фактом о животных. Если произойдет ошибка, она будет залогирована, и пользователь получит соответствующее сообщение.